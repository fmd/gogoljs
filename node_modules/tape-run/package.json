{
  "name": "tape-run",
  "description": "Headless tape test runner",
  "version": "1.1.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/juliangruber/tape-run.git"
  },
  "homepage": "https://github.com/juliangruber/tape-run",
  "main": "index.js",
  "scripts": {
    "test": "tape test/*.js"
  },
  "bin": {
    "tape-run": "./bin/run.js"
  },
  "dependencies": {
    "browser-run": "^2.0.0",
    "optimist": "~0.5.0",
    "tap-finished": "0.0.0",
    "through": "~2.3.4",
    "throughout": "0.0.0"
  },
  "devDependencies": {
    "tape": "~1.0.2",
    "browserify": "~2.14.1"
  },
  "keywords": [
    "tape",
    "test",
    "tap",
    "runner",
    "phantomjs",
    "headless"
  ],
  "author": {
    "name": "Julian Gruber",
    "email": "mail@juliangruber.com",
    "url": "http://juliangruber.com"
  },
  "license": "MIT",
  "readme": "\n# tape-run\n\nA [tape](https://github.com/substack/tape) test runner that runs your tests in\na (headless) browser and returns 0/1 as exit code, so you can use it as your\n`npm test` script.\n\n[![build status](https://secure.travis-ci.org/juliangruber/tape-run.svg)](http://travis-ci.org/juliangruber/tape-run)\n\n## Usage\n\nFirst write a test utilizing [tape](https://github.com/substack/tape) and save\nit to `test/test.js`:\n\n```js\nvar test = require('tape');\n\ntest('a test', function (t) {\n  t.ok(true);\n  t.end();\n});\n```\n\nThen run this command using tape-run and\n[browserify](https://github.com/substack/browserify) and watch the magic happen\nas the TAP results stream in from a browser:\n\n```bash\n$ browserify test/*.js | tape-run\nTAP version 13\n# one\nok 1 true\n\n1..1\n# tests 1\n# pass  1\n\n# ok\n\n$ echo $?\n0\n```\n\n## API\n\nYou can use tape-run from JavaScript too:\n\n```js\nvar run = require('tape-run');\nvar browserify = require('browserify');\n\nbrowserify(__dirname + '/test/test.js')\n  .bundle()\n  .pipe(run())\n  .on('results', console.log)\n  .pipe(process.stdout);\n```\n\nAnd run it:\n\n```bash\n$ node example/api.js\nTAP version 13\n# one\nok 1 true\n\n1..1\n# tests 1\n# pass  1\n\n# ok\n{ ok: true,\n  asserts: [ { ok: true, number: 1, name: 'true' } ],\n  pass: [ { ok: true, number: 1, name: 'true' } ],\n  fail: [],\n  errors: [],\n  plan: { start: 1, end: 1 } }\n```\n\n### run([opts])\n\n`opts` can be:\n\n* `wait (Number) [Default: 1000]`: Make `tap-finished` wait longer for results.\nIncrease this value if tests finish without all tests being run.\n* `port (Number)`: If you specify a port it will wait for you to open a browser\non `http://localhost:<port>` and tests will be run there.\n* `browser (String)`: Browser to use. Defaults to `phantom`. Available if installed:\n  * `chrome`\n  * `firefox`\n  * `ie`\n  * `phantom`\n  * `safari`\n\nThe **CLI** takes the same arguments:\n\n```bash\n$ tape-run --help\nPipe a browserify stream into this.\nbrowserify [opts] [files] | tape-run [opts]\n\nOptions:\n  --wait, -w     Timeout for tap-finished\n  --port, -p     Wait to be opened by a browser on that port\n  --browser, -b  Browser to use. Available if installed: chrome, firefox, ie, phantom, safari  [default: \"phantom\"]\n  --help, -h     Print usage instructions\n\n```\n\n## Installation\n\nWith [npm](http://npmjs.org) do\n\n```bash\n$ npm install tape-run -g # for cli\n$ npm install tape-run    # for api\n```\n\n## License\n\n(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/juliangruber/tape-run/issues"
  },
  "_id": "tape-run@1.1.0",
  "_shasum": "87c058c845453eb530057aa55bfdeebbc07d3b29",
  "_from": "tape-run@",
  "_resolved": "https://registry.npmjs.org/tape-run/-/tape-run-1.1.0.tgz"
}

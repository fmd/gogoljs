{
  "name": "stream-combiner",
  "version": "0.2.2",
  "homepage": "https://github.com/dominictarr/stream-combiner",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/stream-combiner.git"
  },
  "dependencies": {
    "duplexer": "~0.1.1",
    "through": "~2.3.4"
  },
  "devDependencies": {
    "tape": "~2.3.0",
    "event-stream": "~3.0.7"
  },
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "author": {
    "name": "'Dominic Tarr'",
    "email": "dominic.tarr@gmail.com",
    "url": "http://dominictarr.com"
  },
  "license": "MIT",
  "readme": "# stream-combiner\n\n[![npm version](https://img.shields.io/npm/v/stream-combiner.svg)](https://npmjs.org/package/stream-combiner) \n[![Travis CI](https://travis-ci.org/dominictarr/stream-combiner.svg)](https://travis-ci.org/dominictarr/stream-combiner)\n\n## Combine (stream1,...,streamN)\n\nTurn a pipeline into a single stream. `Combine` returns a stream that writes to the first stream\nand reads from the last stream. \n\nListening for 'error' will recieve errors from all streams inside the pipe.\n\n```js\nvar Combine = require('stream-combiner')\nvar es      = require('event-stream')\n\nCombine(                                  // connect streams together with `pipe`\n  process.openStdin(),                    // open stdin\n  es.split(),                             // split stream to break on newlines\n  es.map(function (data, callback) {      // turn this async function into a stream\n    var repr = util.inspect(JSON.parse(data))  // render it nicely\n    callback(null, repr)\n  }),\n  process.stdout                          // pipe it to stdout !\n)\n```\n\nCan also be called with an array:\n\n```js\nvar combinedStream = Combine([\n  stream1,\n  stream2,\n]);\n```\n\nOr to combine gulp plugins:\n\n```js\nfunction coffeePipe() {\n  return Combine(\n    coffeescript(),\n    coffeelint.reporter('fail').on('error', function(){\n      gutil.beep()\n      gulp.run('lint')\n    })\n}\n\n//usage:\ngulp.src().pipe(coffeePipe());\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "description": "[![npm version](https://img.shields.io/npm/v/stream-combiner.svg)](https://npmjs.org/package/stream-combiner)  [![Travis CI](https://travis-ci.org/dominictarr/stream-combiner.svg)](https://travis-ci.org/dominictarr/stream-combiner)",
  "bugs": {
    "url": "https://github.com/dominictarr/stream-combiner/issues"
  },
  "_id": "stream-combiner@0.2.2",
  "_shasum": "aec8cbac177b56b6f4fa479ced8c1912cee52858",
  "_from": "stream-combiner@~0.2.1",
  "_resolved": "https://registry.npmjs.org/stream-combiner/-/stream-combiner-0.2.2.tgz"
}

{
  "name": "tap-colorize",
  "version": "1.2.0",
  "description": "colorize tap output",
  "main": "index.js",
  "bin": {
    "tap-colorize": "bin/cmd.js"
  },
  "dependencies": {
    "colornames": "~0.0.2",
    "minimist": "~0.2.0",
    "quotemeta": "0.0.0",
    "split": "~0.3.0",
    "stream-combiner": "~0.2.1",
    "through2": "~1.0.0",
    "x256": "~0.0.2"
  },
  "devDependencies": {
    "tape": "^2.13.2",
    "tap-parser": "~0.7.0",
    "concat-stream": "~1.4.6"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/tap-colorize.git"
  },
  "homepage": "https://github.com/substack/tap-colorize",
  "keywords": [
    "tap",
    "color",
    "test",
    "testanything",
    "protocol",
    "pretty",
    "testing"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/8..latest",
      "firefox/15",
      "firefox/latest",
      "firefox/nightly",
      "chrome/15",
      "chrome/latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "readme": "# tap-colorize\n\ncolorize [tap](http://testanything.org/)\nin a way that preserves its machine-readability\n\n[![testling badge](https://ci.testling.com/substack/tap-colorize.png)](https://ci.testling.com/substack/tap-colorize)\n\n[![build status](https://secure.travis-ci.org/substack/tap-colorize.png)](http://travis-ci.org/substack/tap-colorize)\n\n# example\n\n``` js\nvar test = require('tape');\nvar colorize = require('tap-colorize');\n\ntest.createStream().pipe(colorize()).pipe(process.stdout);\n\ntest(function (t) {\n    t.plan(2);\n    t.equal(1+1, 2);\n    t.deepEqual([ 1, 2, 3 ], [ 1, 4, 3 ]);\n});\n```\n\nor use the command-line client:\n\n```\n$ node test/beep.js | tap-colorize\n```\n\n# methods\n\n``` js\nvar colorize = require('tap-colorize')\n```\n\n## var stream = colorize(opts)\n\nReturn a transform stream that adds colors to tap-specific lines. The colors are\nadded at the end of the previous line so that the output is still\nmachine-readable by a tap parser.\n\nOptions are:\n\n`opts.pass` - the color to use for `/^ok /` lines\n`opts.fail` - the color to use for `/^not ok /` lines\n`opts.info` - the color to use for comments and version lines\n\nColors can be a hex code starting with a `#`, an array of rgb `0-255` integers,\nor a [color name](https://www.npmjs.org/package/colornames).\n\nYou can preface a color name with `'bright'`, `'dim'`. `'reverse'`, or\n`'underscore'`. Use an array for a color with a string prefix if you want to\npreface an rgb array color.\n\n# attributes\n\n## stream.mode\n\nThe ansi codes for the buffered output are placed into `stream.mode` in case you\nneed to print out extra data before the next line comes in. This is useful for\npatching `console.log()` to show up in the ordinary terminal color and then\nsetting the `stream.mode` back for the next line of output.\n\nSome terminals can do this with `'\\x1b7'` to push and `'\\x1b8'` to pop the\nterminal context with attributes, but support for this feature is not\nwidespread.\n\nIf there is no active mode, `stream.mode` is `null`.\n\n# usage\n\nThere is also a command-line program in this package.\n\n```\nusage: tap-colorize OPTIONS\n\n  Colorize TAP from INPUT, writing colorized data to OUTPUT.\n\nOPTIONS are:\n\n  -i, --input    Read from INPUT. Default: stdin.\n  -o, --output   Write to OUTPUT. Default: stdout.\n\n  --info   Color of info lines.\n  --pass   Color of /^ok / lines.\n  --fail   Color of /^not ok/ lines.\n\n  -h, --help     Show this help message.\n  -v, --version  Print the current version of tap-parser.\n\n```\n\n# install\n\nWith [npm](https://npmjs.org), to get the module do:\n\n```\nnpm install tap-colorize\n```\n\nor to get the command-line program, do:\n\n```\nnpm install -g tap-colorize\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "bugs": {
    "url": "https://github.com/substack/tap-colorize/issues"
  },
  "_id": "tap-colorize@1.2.0",
  "_shasum": "cdffa443c73d88d5a4b394c129f8734e2c32baab",
  "_from": "tap-colorize@",
  "_resolved": "https://registry.npmjs.org/tap-colorize/-/tap-colorize-1.2.0.tgz"
}

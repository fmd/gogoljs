{
  "name": "gulp-exec",
  "description": "exec plugin for gulp",
  "version": "2.1.2",
  "homepage": "https://github.com/robrich/gulp-exec",
  "repository": {
    "type": "git",
    "url": "git://github.com/robrich/gulp-exec.git"
  },
  "author": {
    "name": "Rob Richardson",
    "url": "http://robrich.org/"
  },
  "main": "./index.js",
  "keywords": [
    "gulpplugin",
    "exec"
  ],
  "dependencies": {
    "gulp-util": "^3.0.0",
    "gulplog": "^1.0.0",
    "through2": "^2.0.0"
  },
  "devDependencies": {
    "jshint": "^2.8.0",
    "mocha": "^2.3.3",
    "should": "^7.1.0",
    "vinyl": "^1.0.0"
  },
  "scripts": {
    "test": "mocha && jshint ."
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "license": "MIT",
  "readme": "gulp-exec ![status](https://secure.travis-ci.org/robrich/gulp-exec.png?branch=master)\r\n===========\r\n\r\n[exec](http://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback) plugin for [gulp](https://github.com/gulpjs/gulp)\r\n\r\nUsage\r\n-----\r\n\r\n```javascript\r\nvar exec = require('gulp-exec');\r\n\r\ngulp.task('reset', function() {\r\n  var options = {\r\n    continueOnError: false, // default = false, true means don't emit error event\r\n    pipeStdout: false, // default = false, true means stdout is written to file.contents\r\n    customTemplatingThing: \"test\" // content passed to gutil.template()\r\n  };\r\n  var reportOptions = {\r\n  \terr: true, // default = true, false means don't write err\r\n  \tstderr: true, // default = true, false means don't write stderr\r\n  \tstdout: true // default = true, false means don't write stdout\r\n  }\r\n  gulp.src('./**/**')\r\n    .pipe(exec('git checkout <%= file.path %> <%= options.customTemplatingThing %>', options))\r\n    .pipe(exec.reporter(reportOptions));\r\n});\r\n```\r\n\r\n**Note**: If you just want to run a command, just run the command, don't use this plugin:\r\n\r\n```js\r\nvar exec = require('child_process').exec;\r\n\r\ngulp.task('task', function (cb) {\r\n  exec('ping localhost', function (err, stdout, stderr) {\r\n    console.log(stdout);\r\n    console.log(stderr);\r\n    cb(err);\r\n  });\r\n})\r\n```\r\n\r\n~~`gulp.src('.')`~~ does bad things.  Don't do it.\r\n\r\n**Note**: running and reporting are now separate, a breaking change from previous versions.\r\n\r\nLICENSE\r\n-------\r\n\r\n(MIT License)\r\n\r\nCopyright (c) 2014 [Richardson & Sons, LLC](http://richardsonandsons.com/)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/robrich/gulp-exec/issues"
  },
  "_id": "gulp-exec@2.1.2",
  "_shasum": "5d8b132b0de0a738cb5dc9dfab8a0205726cca96",
  "_from": "gulp-exec@",
  "_resolved": "https://registry.npmjs.org/gulp-exec/-/gulp-exec-2.1.2.tgz"
}
